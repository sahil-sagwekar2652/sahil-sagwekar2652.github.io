<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sahil's Blog - misc</title><link href="https://sahil-sagwekar2652.github.io/" rel="alternate"></link><link href="https://sahil-sagwekar2652.github.io/feeds/misc.atom.xml" rel="self"></link><id>https://sahil-sagwekar2652.github.io/</id><updated>2023-09-28T08:34:00+05:30</updated><entry><title>Make your own static blog using Pelican</title><link href="https://sahil-sagwekar2652.github.io/make-your-own-static-blog-using-pelican.html" rel="alternate"></link><published>2023-09-28T08:34:00+05:30</published><updated>2023-09-28T08:34:00+05:30</updated><author><name>Sahil Sagwekar</name></author><id>tag:sahil-sagwekar2652.github.io,2023-09-28:/make-your-own-static-blog-using-pelican.html</id><summary type="html">&lt;p&gt;In the world of website creation, simplicity and efficiency are key. Enter Pelican, a powerful static site generator written in Python that's perfect for crafting blogs, portfolios, and straightforward websites. In this blog post, I'll guide you through the process of creating your own static blog site using Pelican and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the world of website creation, simplicity and efficiency are key. Enter Pelican, a powerful static site generator written in Python that's perfect for crafting blogs, portfolios, and straightforward websites. In this blog post, I'll guide you through the process of creating your own static blog site using Pelican and demonstrate how you can host it on GitHub Pages, all within a matter of minutes. Whether you're a novice or a seasoned developer, this guide will help you establish a minimal setup. And if you're itching to take your blog further, don't worry - Pelican makes customization astonishingly easy.&lt;/p&gt;
&lt;p&gt;Now, let's dive into the world of Pelican and start building your static blog from scratch.&lt;/p&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1695826784018/231ae782-8abb-4738-a61a-c8abc648a0e1.png"&gt;&lt;/p&gt;
&lt;h3 id="heading-step-1"&gt;Step 1&lt;/h3&gt;
&lt;p&gt;Create a directory named &lt;code&gt;blog&lt;/code&gt; and then create another &lt;code&gt;Pelican&lt;/code&gt; directory inside it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;blog/
├── Pelican
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into the Pelican directory and start by creating a Python virtual environment using the tool of your choice and installing the pelican package from pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;venv&lt;span class="w"&gt; &lt;/span&gt;venv
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;venv/bin/activate
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pelican
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The default content source format supported by Pelican is .rst (reStructured text). If you plan on using Markdown then you need to install the following package too.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican[markdown]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="heading-step-2"&gt;Step 2&lt;/h3&gt;
&lt;p&gt;Pelican has a &lt;code&gt;pelican-quickstart&lt;/code&gt; script which will help us to setup the basic settings interactively. It will also generate the desired directory structure for us. So let's start by using it. Here is an example -&lt;/p&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1695826741531/c44349a2-3f8b-4561-85dd-65cc62c47399.png"&gt;&lt;/p&gt;
&lt;p&gt;Great! Now you have your pelican blog set up locally. Your file structure should now look like this -&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;blog/
├── Pelican
    ├── content
    │   └── (pages)
    ├── output
    ├── tasks.py
    ├── Makefile
    ├── pelicanconf.py       # Main settings file
    └── publishconf.py       # Settings to use when ready to publish
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You need to add a 'Metadata' section at the start of every content file. The metadata format for markdown content is as below -&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Title: My super title
Date: 2010-12-03 10:20
Modified: 2010-12-05 19:30
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Authors: Alexis Metaireau, Conan Doyle
Summary: Short version for index and feeds

This is the content of my super blog post.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can now start writing up some amazing articles inside the &lt;code&gt;blog/Pelican/content&lt;/code&gt; directory.&lt;/p&gt;
&lt;h3 id="heading-step-3-importing-an-existing-blog-optional"&gt;Step 3 - Importing an existing blog (optional)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;You can skip this step if you don't wish to import your data from blogging platforms like Medium, WordPress, Tumblr etc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Detailed documentation for this step can be found at &lt;a href="https://docs.getpelican.com/en/latest/importer.html"&gt;https://docs.getpelican.com/en/latest/importer.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here we'll look at how to import your pre-existing medium.com blog as I feel it's one of the most used platforms&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We will use the &lt;code&gt;pelican-import&lt;/code&gt; tool to import our data from medium. &lt;code&gt;pelican-import&lt;/code&gt; requires some additional dependencies which can be installed through the following steps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;feedparser&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pip install feedparser&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pandoc
See the &lt;a href="https://pandoc.org/installing.html"&gt;Pandoc site&lt;/a&gt; for operating-system-specific installation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Medium supports RSS feeds. Refer to &lt;a href="https://help.medium.com/hc/en-us/articles/214874118-Using-RSS-feeds-of-profiles-publications-and-topics"&gt;this&lt;/a&gt; article for supported RSS feeds.&lt;/p&gt;
&lt;p&gt;For importing blogs from a profile, use the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican-import --feed https://medium.com/feed/@username -m markdown&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I have used markdown as the format in the above example, the default is reStructured Text.&lt;/p&gt;
&lt;p&gt;The content will now be imported into the &lt;code&gt;blog/Pelican/content&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="heading-step-4"&gt;Step 4&lt;/h3&gt;
&lt;p&gt;The default site generated by Pelican is plain HTML. Who likes to read plain HTML? No one. So let's spruce up our blog with a UI theme. (If you generate your content using Step 3, you might have a theme installed by default.)&lt;/p&gt;
&lt;p&gt;Pelican has a large collection of community-maintained themes to choose from. To use these themes, we need to clone the themes repository locally.&lt;/p&gt;
&lt;p&gt;Before we do that, make sure to create a git repository in the &lt;code&gt;blog&lt;/code&gt; directory. Create a &lt;code&gt;.gitignore&lt;/code&gt; file and add the following lines to it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Pelican/pelican-themesPelican/venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now let's clone the pelican-themes repo. Run the following command inside the &lt;code&gt;blog/Pelican&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone --recursive https://github.com/getpelican/pelican-themes ./pelican-themes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We will use &lt;code&gt;pelican-themes&lt;/code&gt; command to install a new theme. Here, I'm installing the &lt;a href="https://github.com/Parbhat/pelican-blue"&gt;Pelican blue&lt;/a&gt; theme.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican-themes -i ./pelican-themes/pelican-blue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we need to add this theme to our &lt;code&gt;pelicanconf.py&lt;/code&gt; settings file. Note that every theme might have different settings which should be mentioned in the respective theme's GitHub repo. Copy the settings mentioned in the &lt;a href="https://github.com/Parbhat/pelican-blue"&gt;Pelican blue&lt;/a&gt; repo README. The theme should look like this - &lt;a href="https://sahil-sagwekar.github.io"&gt;https://sahil-sagwekar.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1695886054892/9b910376-ea80-48ca-8dd0-fe1e72821e53.png"&gt;&lt;/p&gt;
&lt;p&gt;To test the blog locally, use the &lt;code&gt;make devserver&lt;/code&gt; command. It will host your site at &lt;code&gt;localhost:8000&lt;/code&gt; by default and automatically regenerate on changes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; - Blank lines in the original blog post might result in some artifacts in the markdown content, make sure to check the files before publishing.&lt;/p&gt;
&lt;h3 id="heading-step-5"&gt;Step 5&lt;/h3&gt;
&lt;p&gt;Let's publish the site using GitHub pages so that anyone in the world can read your blog.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the &lt;code&gt;publishconf.py&lt;/code&gt; file and make sure that the &lt;code&gt;SITEURL&lt;/code&gt; variable has the value &lt;code&gt;https://your_username.github.io&lt;/code&gt; and substitute your GitHub username in it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now let's generate the site using the following command. This command should generate the site outside the &lt;code&gt;Pelican&lt;/code&gt; directory and inside the &lt;code&gt;blog&lt;/code&gt; parent directory. Run this command in the &lt;code&gt;Pelican&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pelican content -o .. -s publishconf.py&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a GitHub repo with the name &lt;code&gt;your_username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1695886229161/db5f4e27-c3d5-4bfd-a15d-989c918d8f97.png"&gt;&lt;/p&gt;
&lt;p&gt;and connect it to the local repository by &lt;code&gt;git remote add&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now push everything inside the &lt;code&gt;blog&lt;/code&gt; directory to the remote repo on GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable GitHub pages for your repo from this site &lt;code&gt;https://github.com/your_username/your_username.github.io/settings/pages&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now you should have your very own blog hosted at &lt;code&gt;https://your_username.github.io&lt;/code&gt; !&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But this is just the beginning. Pelican offers a plethora of additional features and customization options. Whether you want to add new functionalities, experiment with different themes, or delve into the world of web dev, you have a robust platform to build upon.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Happy Blogging!&lt;/strong&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Practical Productivity Hacks</title><link href="https://sahil-sagwekar2652.github.io/practical-productivity-hacks.html" rel="alternate"></link><published>2023-08-28T12:54:00+05:30</published><updated>2023-08-28T12:54:00+05:30</updated><author><name>Sahil Sagwekar</name></author><id>tag:sahil-sagwekar2652.github.io,2023-08-28:/practical-productivity-hacks.html</id><summary type="html">&lt;p&gt;In today's age, the ability to focus and pay attention to one thing is diminishing amongst the younger generation. A large part of the cause can be attributed to social media. Facebook is more of a mass social manipulation experiment than it is a tech company. But we shall not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In today's age, the ability to focus and pay attention to one thing is diminishing amongst the younger generation. A large part of the cause can be attributed to social media. Facebook is more of a mass social manipulation experiment than it is a tech company. But we shall not go on that tangent. Here, I will share some hacks which are popular and also some which I have devised on my own which will help you increase your productivity and get things done faster.&lt;/p&gt;
&lt;p&gt;So let's dive in!&lt;/p&gt;
&lt;h1 id="heading-1-breaking-the-instant-gratification-cycle"&gt;1. &lt;strong&gt;Breaking the Instant Gratification Cycle&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://unsplash.com/photos/tLZhFRLj6nY"&gt;&lt;img alt class="image--center mx-auto" src="https://images.unsplash.com/photo-1563986768494-4dee2763ff3f?ixlib=rb-4.0.3&amp;amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=2070&amp;amp;q=80"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="heading-httpsemojipediaorgmobile-phonecounter-social-media-addiction"&gt;&lt;a href="https://emojipedia.org/mobile-phone"&gt;📱&lt;/a&gt;Counter Social Media Addiction&lt;/h3&gt;
&lt;p&gt;Ever find yourself lost in the quicksand of social media's dopamine rush? It's a universal struggle. From those mesmerizing YouTube shorts to the captivating world of Instagram reels, it's all about those lightning-fast dopamine hits. But here's the savvy twist: use social media with intent. If it's not adding real value, recalibrate. Instagram's tricky waters can leave you high and dry unless you're a creator.&lt;/p&gt;
&lt;p&gt;YouTube is unavoidable due to it being the largest video search engine. But YouTube courses are free only if you are willing to pay attention. &lt;a href="https://unhook.app/"&gt;&lt;strong&gt;Unhook.app&lt;/strong&gt;&lt;/a&gt; is a great browser extension that hides the YouTube recommendations feed and the watch next column.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://x.com"&gt;X.com&lt;/a&gt; is in my opinion the best social media for developers, where 'Learning in Public' takes center stage. You will find a lot of people supporting you on your journey and also reaching out to you for opportunities. Just remember, time is precious.&lt;/p&gt;
&lt;h3 id="heading-httpswwwgooglecomurlsatandamprctjandampqandampesrcsandampsourcewebandampcdandampved2ahukewip2sz3xv-aaxwsdpuhhcy1ajiqfnoecb8qaqandampurlhttps3a2f2femojipediaorg2fglobe-with-meridiansandampusgaovvaw38sx0alarvhrwur8fqa09sandampopi89978449-plus-pro-tip"&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;ved=2ahUKEwip2sz3xv-AAxWsdPUHHcY1AJIQFnoECB8QAQ&amp;amp;url=https%3A%2F%2Femojipedia.org%2Fglobe-with-meridians&amp;amp;usg=AOvVaw38sx0AlaRVHRWUR8Fqa09s&amp;amp;opi=89978449"&gt;🌐 &lt;/a&gt; &lt;strong&gt;Plus, Pro Tip:&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Navigate the content maze with RSS feeds. Stay at the forefront with news, blogs, and even YouTube channels. Yes, Hashnode blogs too!&lt;/p&gt;
&lt;p&gt;The game-changer? Setting up a desktop RSS feed reader. &lt;strong&gt;Thunderbird&lt;/strong&gt; email client takes the lead, especially for our Linux aficionados. I use it too. Here is a video on how to set up RSS feeds on Thunderbird -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://youtu.be/rF3Yrguwy0M?si=8FPhCaGIOVhrRk28"&gt;Setup RSS on Thunderbird&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://authory.com/blog/create-a-youtube-rss-feed-with-vastly-increased-limits"&gt;Find RSS links for YouTube channels&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="heading-2-the-power-of-putting-pen-to-paper"&gt;2. &lt;strong&gt;The Power of Putting Pen to Paper&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://unsplash.com/photos/6qThS1x6P6A"&gt;&lt;img alt class="image--center mx-auto" src="https://images.unsplash.com/photo-1572273869941-45732d6f581c?ixlib=rb-4.0.3&amp;amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=2069&amp;amp;q=80"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The oldest trick, timeless and unfailingly effective put pen to paper. Writing down your goals means writing them down on a piece of paper, preferably a diary or journal, the magic is in the tactile connection. Although this in itself is a good practice; what's better is maintaining a journal.&lt;/p&gt;
&lt;p&gt;Daily journaling ideally consists of writing down goals for the day and then writing a summary of what you achieved and what the next set of goals are at the end of the day. This journal, a mirror to your journey, nurtures accountability and tangible growth.&lt;/p&gt;
&lt;h1 id="heading-3-embrace-full-screen-mode"&gt;3. &lt;strong&gt;Use Full-Screen Mode&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;We have all been guilty of tab-hopping. I often find myself switching through tabs and windows with my fingers constantly on Ctrl+Tab and Alt+Tab. If you are someone like me who gets distracted easily by other open tabs and applications, you need to start using full-screen mode.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multi-tasking is an illusion.&lt;/strong&gt; The human brain works similarly to a single-core CPU in this aspect. You cannot handle two processes at the same time, you can only switch between tasks. For us humans, switching between tasks can be very counter-productive.&lt;/p&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1693233003752/04bc3bfd-473e-422d-804a-16ea75e7971c.png"&gt;&lt;/p&gt;
&lt;p&gt;So whether you're deep into coding or surfing the web, embrace full-screen bliss. It's my go-to secret to obliterate visual clutter. I'm using full-screen even as I write this blog ;)&lt;/p&gt;
&lt;h1 id="heading-4-action-beats-theory-just-write-code"&gt;4. 👨 💻 &lt;strong&gt;Action Beats Theory:&lt;/strong&gt; Just Write Code&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/QMbx0dTWJIQ?si=mEFm8RYJ1kiYcMzO" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;The hardest part about learning to code is writing the actual code.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Find ways to force yourself to read less, watch less and write code more. Start working on a project and learn on the go. &lt;strong&gt;Counterintuitive? Absolutely. The truth? The learning journey knows no finish line.&lt;/strong&gt; I was a person who used to think that I needed to master all the technologies before starting a project. But I realized that there is no end to learning.
You will find yourself at the same spot from where you began even after spending weeks 'learning'.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Announce that you are working on a project publicly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Participate in hackathons and competitions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="heading-httpsemojipediaorghigh-voltagea-high-octane-hackathon-delivers-more-knowledge-in-two-days-than-months-of-theoretical-pursuit"&gt;&lt;a href="https://emojipedia.org/high-voltage"&gt;&lt;/a&gt;A high-octane hackathon delivers more knowledge in two days than months of theoretical pursuit.&lt;/h4&gt;
&lt;h4 id="heading-let-go-of-any-hesitations-open-your-ide-and-just-start-coding"&gt;Let go of any hesitations, open your IDE and just start coding!&lt;/h4&gt;</content><category term="misc"></category></entry><entry><title>Understanding the Essentials of Prompt Engineering: A Beginner's Guide</title><link href="https://sahil-sagwekar2652.github.io/understanding-the-essentials-of-prompt-engineering-a-beginners-guide.html" rel="alternate"></link><published>2023-04-07T14:40:00+05:30</published><updated>2023-04-07T14:40:00+05:30</updated><author><name>Sahil Sagwekar</name></author><id>tag:sahil-sagwekar2652.github.io,2023-04-07:/understanding-the-essentials-of-prompt-engineering-a-beginners-guide.html</id><summary type="html">&lt;h2 id="heading-introduction-to-prompt-engineering"&gt;Introduction to Prompt Engineering&lt;/h2&gt;
&lt;p&gt;Prompt engineering is a process that involves creating prompts or inputs for natural language processing models. These prompts are used to generate responses that are relevant to the given input. The process of prompt engineering is essential to the development of intelligent systems that can understand …&lt;/p&gt;</summary><content type="html">&lt;h2 id="heading-introduction-to-prompt-engineering"&gt;Introduction to Prompt Engineering&lt;/h2&gt;
&lt;p&gt;Prompt engineering is a process that involves creating prompts or inputs for natural language processing models. These prompts are used to generate responses that are relevant to the given input. The process of prompt engineering is essential to the development of intelligent systems that can understand human language.&lt;/p&gt;
&lt;p&gt;Prompt engineering involves designing a set of prompts that can be used to train natural language processing models. These prompts can be in the form of questions, statements, or any other input that might be relevant to a particular application. The goal of prompt engineering is to create a set of prompts that will generate accurate and relevant responses from the model.&lt;/p&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1680877662852/348858ad-103f-4162-9905-f125b7754fa2.jpeg"&gt;&lt;/p&gt;
&lt;h2 id="heading-what-is-gpt"&gt;What is GPT ?&lt;/h2&gt;
&lt;p&gt;GPT, or Generative Pre-trained Transformer, is a type of natural language processing model that has recently gained popularity. GPT is a language model that is pre-trained on a large dataset of text. The model is trained to generate text similar to the text it was trained on.&lt;/p&gt;
&lt;h2 id="heading-applications-of-prompt-engineering"&gt;Applications of Prompt Engineering&lt;/h2&gt;
&lt;p&gt;Prompt engineering has a wide range of applications in various fields. One of the most prominent applications of prompt engineering is &lt;strong&gt;chatbots&lt;/strong&gt;. Chatbots are computer programs that use natural language processing to interact with users. Prompt engineering is used to train chatbots to respond to user queries.&lt;/p&gt;
&lt;p&gt;Another application of prompt engineering is in language translation. Language translation systems use prompts to generate translations of text from one language to another. Prompt engineering is used to train these systems to generate accurate translations.&lt;/p&gt;
&lt;h2 id="heading-the-benefits-of-prompt-engineering"&gt;The Benefits of Prompt Engineering&lt;/h2&gt;
&lt;p&gt;Prompt engineering has several benefits, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;: Prompt engineering can help improve the accuracy of natural language processing models. By training the model on a set of relevant prompts, it can generate more accurate responses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Efficiency&lt;/strong&gt;: Prompt engineering can help make natural language processing models more efficient. By training the model on a set of relevant prompts, it can generate responses more quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;: Prompt engineering allows for flexibility in using natural language processing models. By creating a set of relevant prompts, the model can be trained to respond to a wide range of inputs. So instead of having a do-it-all program, we can narrow down our requirements to get more precise responses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt class="image--center mx-auto" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1680878303596/af000487-e2ac-4a30-aa4f-36430f31b9ad.png"&gt;&lt;/p&gt;
&lt;h2 id="heading-how-to-get-started-with-prompt-engineering-a-beginners-guide"&gt;How to Get Started with Prompt Engineering: A Beginner's Guide&lt;/h2&gt;
&lt;p&gt;Getting started with prompt engineering can be overwhelming for beginners. Here are some tips on how to get started:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Choose a tool&lt;/strong&gt;: There are several tools available for practicing your prompt engineering skills, including GPT-3, Chat Sonic, and many more. Choose a tool that suits your needs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Define your prompts&lt;/strong&gt;: Define a set of relevant prompts for your application. These prompts will be used to train the model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Train the model&lt;/strong&gt;: Use your set of prompts to train the model. This process can take some time, but it is essential to generating accurate responses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="heading-tips-for-creating-effective-prompts"&gt;Tips for Creating Effective Prompts&lt;/h2&gt;
&lt;p&gt;To create effective prompts, consider the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Be specific&lt;/strong&gt;: The prompts should be specific to your application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Be concise&lt;/strong&gt;: The prompts should be concise and easy to understand.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use natural language&lt;/strong&gt;: The prompts should be written in natural language to make them more relevant to users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="heading-the-future-of-prompt-engineering"&gt;The Future of Prompt Engineering&lt;/h2&gt;
&lt;p&gt;The future of prompt engineering is promising. As the demand for intelligent systems continues to grow, the need for individuals who can efficiently prompt language models will increase. As it is widely said that "AI won't take away your job, but people who use AI will."&lt;/p&gt;
&lt;h2 id="heading-conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Prompt engineering is a critical part of learning to utilize Generative AI. It is used to train models to generate accurate and relevant responses to user inputs. By understanding the essentials of prompt engineering, beginners can get started with developing intelligent systems that can understand and respond to human language.&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Starting your coding journey might not be as hard as you think…</title><link href="https://sahil-sagwekar2652.github.io/starting-your-coding-journey-might-not-be-as-hard-as-you-think.html" rel="alternate"></link><published>2023-01-31T13:12:00+05:30</published><updated>2023-01-31T13:12:00+05:30</updated><author><name>Sahil Sagwekar</name></author><id>tag:sahil-sagwekar2652.github.io,2023-01-31:/starting-your-coding-journey-might-not-be-as-hard-as-you-think.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;You could be anyone, a high-school student going down the online rabbit hole or an adult who is frustrated with his current job and looking to switch careers. If you are looking to start your journey as a programmer, this article will help you get up-to-speed on how to start …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;You could be anyone, a high-school student going down the online rabbit hole or an adult who is frustrated with his current job and looking to switch careers. If you are looking to start your journey as a programmer, this article will help you get up-to-speed on how to start your coding adventure.&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id="heading-it-is-easy-to-start-programming"&gt;&lt;strong&gt;It is easy to start programming&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;If you dont mind sitting in front of a computer and staring at your code for long hours then programming just might be your thing ;)&lt;/p&gt;
&lt;p&gt;Programming is just like maths in some ways. The only things you need to start doing mathematics are a pen, a piece of paper and your brain. Likewise, a computer of any form factor (even your smartphone) and your brain are all you need to start coding. There is no need for any swanky new setup. Any computer which runs reasonably smoothly will be enough for you to start coding. Tools like Replit make it easy for newcomers to start without setting up a coding environment. Replit is even available as an app for Android.&lt;/p&gt;
&lt;p&gt;It would help if you start with a goal. But even if you dont have a goal you should do your homework and find out which path suits you the best.&lt;/p&gt;
&lt;p&gt;The best way to learn to code is through projects. If you start learning the language you may find it boring on the other hand if you start working on a project and learn the language on-the-go chances are you will find yourself learning a new language and its applications simultaneously.&lt;/p&gt;
&lt;p&gt;What sources you refer to solely depends on your taste but there is one thing you should keep in mind and that is .&lt;/p&gt;
&lt;h1 id="heading-tutorial-hell"&gt;&lt;strong&gt;Tutorial hell&lt;/strong&gt; 💀&lt;/h1&gt;
&lt;p&gt;If you feel like learning through books is more like your thing then there are plenty of great books to pick from. Even then YouTube is likely to be your first choice to look for content while learning new topics and skills. But remember, while using free services the product is the user. You could find yourself in Tutorial hell, which means you are stuck watching tutorial upon tutorial from the recommendations without learning anything substantial. The YouTube algorithm is made in a way that coaxes you into watching more and more videos.&lt;/p&gt;
&lt;p&gt;Remember, &lt;strong&gt;real learning&lt;/strong&gt; happens when through hands-on projects. Not only do you need a good roadmap, but also an environment where you can learn and apply your skills at the same time. This brings us to the next point .&lt;/p&gt;
&lt;h1 id="heading-benefits-of-paid-platforms"&gt;&lt;strong&gt;Benefits of paid platforms&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;It is totally fine if you choose to use YouTube as your primary source of learning, there are a ton of amazing courses on YouTube which are free. But still, they might feel incomplete. Paid courses on Platforms like Codedamn, Udemy or Coursera have courses that have carefully curated content that is regularly updated. Codedamn even provides you with virtual code playgrounds to practice your skills.&lt;/p&gt;
&lt;p&gt;Still, it is recommended that you try out free content on free platforms before committing to a paid course. There are many domains in programming. Web development, Data Science, AI, Machine learning, Game Development, and Mobile development are some popular domains. You should try and get your hands dirty in at least two different domains to understand which one is for you.&lt;/p&gt;
&lt;h1 id="heading-do-you-need-to-learn-maths-to-start-coding"&gt;&lt;strong&gt;Do you need to learn Maths to start coding?&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;The answer is no.&lt;/p&gt;
&lt;p&gt;Having a good grasp of maths would never hurt anybody but its not necessary if you are just starting. What you need to learn is the skill of &lt;strong&gt;Logic Building&lt;/strong&gt; and &lt;strong&gt;Problem Solving&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Computers were invented to solve complex problems and do tedious, repetitive tasks for humans. Learning how to use conditions and loops to emulate real-life scenarios and solve real-world problems is a part of Logic Building. These skills can only be attained through practice and more practice!&lt;/p&gt;
&lt;p&gt;If your goal is to be a Data Scientist or an AI/ML engineer then mathematics becomes a necessary part of your skill set.&lt;/p&gt;
&lt;h1 id="heading-consistency-is-the-best-virtue-of-a-programmer"&gt;&lt;strong&gt;Consistency is the best virtue of a programmer&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Just like Honesty is the best policy, Consistency is the best virtue of a programmer.&lt;/p&gt;
&lt;p&gt;Learning to code is difficult. At times you may get stuck on a problem for hours and feel like giving up your coding adventure altogether. It happens to all of us. But you must remind yourself that getting stuck and facing problems is all a part of the journey.&lt;/p&gt;
&lt;p&gt;It often happens to me that I feel like there is no way to solve an error, but when I look at it again the next day I find out that it was just a silly mistake! It is during times like these you learn the most crucial skill as a programmer which is How to GOOGLE effectively.&lt;/p&gt;
&lt;p&gt;Yes, you read that correctly, searching for ways to solve an error is a big part of a programmers job. If you come across an error there is an almost 100% chance that someone has already faced and solved that error. The best website for this purpose is StackOverflow. Almost every error you come across will have its solution on StackOverflow.&lt;/p&gt;
&lt;h2 id="heading-to-conclude-there-is-hardly-anything-you-need-to-start-coding-just-down-a-cup-of-coffee-and-go-for-it"&gt;&lt;strong&gt;To conclude, there is hardly anything you need to start coding. Just down a cup of coffee and go for it!&lt;/strong&gt;&lt;/h2&gt;</content><category term="misc"></category></entry><entry><title>My contributions @ KWoC 2022</title><link href="https://sahil-sagwekar2652.github.io/my-contributions-kwoc-2022.html" rel="alternate"></link><published>2023-01-08T20:41:00+05:30</published><updated>2023-01-08T20:41:00+05:30</updated><author><name>Sahil Sagwekar</name></author><id>tag:sahil-sagwekar2652.github.io,2023-01-08:/my-contributions-kwoc-2022.html</id><summary type="html">&lt;h3 id="heading-ps-i-got-selected-as-a-top-contributorhttpsgithubcomkossiitkgppublic-filesblobmasterkwoc2022-certificatesstudentsahil-sagwekar2652pdf"&gt;P.S. I got selected as a &lt;a href="https://github.com/kossiitkgp/public-files/blob/master/KWoC/2022-Certificates/Student/sahil-sagwekar2652.pdf"&gt;top contributor&lt;/a&gt; 🎉&lt;/h3&gt;
&lt;h3 id="heading-introduction"&gt;Introduction&lt;/h3&gt;
&lt;p&gt;As a new open-source contributor, participating in the Kharagpur winter of code 2022 event was an incredibly valuable experience for me. I had the opportunity to work on an open-source project and make meaningful contributions to their codebase.&lt;/p&gt;
&lt;h3 id="heading-projects-i-worked-on"&gt;Projects I …&lt;/h3&gt;</summary><content type="html">&lt;h3 id="heading-ps-i-got-selected-as-a-top-contributorhttpsgithubcomkossiitkgppublic-filesblobmasterkwoc2022-certificatesstudentsahil-sagwekar2652pdf"&gt;P.S. I got selected as a &lt;a href="https://github.com/kossiitkgp/public-files/blob/master/KWoC/2022-Certificates/Student/sahil-sagwekar2652.pdf"&gt;top contributor&lt;/a&gt; 🎉&lt;/h3&gt;
&lt;h3 id="heading-introduction"&gt;Introduction&lt;/h3&gt;
&lt;p&gt;As a new open-source contributor, participating in the Kharagpur winter of code 2022 event was an incredibly valuable experience for me. I had the opportunity to work on an open-source project and make meaningful contributions to their codebase.&lt;/p&gt;
&lt;h3 id="heading-projects-i-worked-on"&gt;Projects I worked on&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sadbro/pydirman"&gt;Pydirman&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="heading-list-of-pull-requests-made-by-me"&gt;List of pull requests made by me&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/sadbro/pydirman/pull/13"&gt;https://github.com/sadbro/pydirman/pull/13&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/sadbro/pydirman/pull/14"&gt;https://github.com/sadbro/pydirman/pull/14&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/sadbro/pydirman/pull/15"&gt;https://github.com/sadbro/pydirman/pull/15&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/sadbro/pydirman/pull/18"&gt;https://github.com/sadbro/pydirman/pull/18&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="heading-summary"&gt;Summary&lt;/h3&gt;
&lt;p&gt;I work on Linux and use the command line all the time. This is probably the reason I gravitated towards Pydirman because it is a command-line application for Linux systems.&lt;/p&gt;
&lt;p&gt;The first issue I faced with the project was with the installation. The project was initially developed only for Debian Linux. So naturally, my first step was to port the project for Arch Linux (my working distro). I had to replace the bash commands with the package manager for Arch Linux. Features like user input for required packages and optimising the path of the installed files were added and a single setup.py was created.&lt;/p&gt;
&lt;p&gt;Once I had the project installed I started using the project on a daily basis. Which exposed some bugs and inadequacies. The default text editor used was nano, which is a command line text editor. The command line text editor which is most popular is 'vim'. So I modified the code so that users can use their choice of text editor by specifying it in the '.pydirman.config' configuration file. Another issue concerned with the 'test' command was fixed within this same pull request.&lt;/p&gt;
&lt;p&gt;The next pull request I've updated the README.md to reflect the changes in the project. Also added the support for python debugger, this will enable the user to use the python debugger inside the Pydirman 'test' interface. Added support to execute .pyw python files alongside normal .py files. Finally created an uninstall.py file which removes all the installed files.&lt;/p&gt;
&lt;h3 id="heading-future-work"&gt;Future Work&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Making a separate terminal emulator with python tkinter to display the 'test' interface.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding support for the 'u - open USB drive' command for other distros.&lt;/p&gt;
&lt;p&gt;(referenced in the Issues tab)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Working on other projects like: &lt;a href="https://github.com/exitflynn/DeGrasse"&gt;DeGrasse - Python Discord Bot Using NASA Space API's and more&lt;/a&gt;, &lt;a href="https://github.com/proffapt/code-runner"&gt;Code Runner&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="heading-learnings"&gt;Learnings&lt;/h3&gt;
&lt;p&gt;One of the most important things I learned during my time as a KWoC participant was the importance of effective communication. I also learned the importance of asking for help when needed, as there were always team members and mentors available to support me.&lt;/p&gt;
&lt;p&gt;I also gained valuable experience in project management and time management, as I had to juggle my KWoC commitments with my other responsibilities.&lt;/p&gt;</content><category term="misc"></category></entry></feed>